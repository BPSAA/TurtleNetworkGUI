# Docker
# Build a Docker image 
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- dev

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: BuildWindows
    displayName: Build Windows
    pool:
      vmImage: 'windows-latest'
    steps:
    - checkout: self
    - task: Npm@1
      inputs:
        command: 'install'
      displayName: 'Install npm dependencies'
    - task: Npm@1
      inputs:
        command: 'custom'
        customCommand: 'run build'

    - task: Npm@1
      inputs:
        command: 'custom'
        customCommand: 'run electron:win'
      displayName: 'Build win electron wallets' 
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: './dist/linux'
        ArtifactName: 'linux'
        publishLocation: 'Container'
      displayName: 'Create linux artifacts'  


  - job: BuildLinux
    displayName: Build linux
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
    - task: Npm@1
      inputs:
        command: 'install'
      displayName: 'Install npm dependencies'
    - task: Npm@1
      inputs:
        command: 'custom'
        customCommand: 'run build'

    - task: Npm@1
      inputs:
        command: 'custom'
        customCommand: 'run electron:linux'
      displayName: 'Build linux electron wallets' 

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: './dist/linux'
        ArtifactName: 'linux'
        publishLocation: 'Container'
      displayName: 'Create linux artifacts'  

  - job: BuildOSX
    displayName: Build osx
    pool:
      vmImage: 'linux-latest'
    steps:
    - checkout: self
    - task: Npm@1
      inputs:
        command: 'install'
      displayName: 'Install npm dependencies'
    - task: Npm@1
      inputs:
        command: 'custom'
        customCommand: 'run build'  
    - task: Npm@1
      inputs:
        command: 'custom'
        customCommand: 'run electron:osx'
      displayName: 'Build osx electron wallets' 

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: './dist/osx'
        ArtifactName: 'linux'
        publishLocation: 'Container'
      displayName: 'Create osx artifacts'  

  - job: Build
    displayName: Build docker
    pool:
      vmImage: 'linux-latest'
    dependsOn:  
    - BuildLinux
    - BuildWindows
    - BuildOSX
    
    steps:
    - checkout: self

    - task: Docker@2
      inputs:
        containerRegistry: 'turtlenetwork docker'
        repository: 'turtlenetwork/tngui'
        command: 'buildAndPush'
        Dockerfile: 'Dockerfile'
      displayName: 'Build and push docker container for testnet'  

    - task: Docker@2
      inputs:
        containerRegistry: 'turtlenetwork docker'
        repository: 'turtlenetwork/mainnet-tngui'
        command: 'build'
        Dockerfile: '**/Dockerfile'
        arguments: '--build-arg web_environment=mainnet'
      displayName: 'Build docker container for mainnet'


    - task: Docker@2
      inputs:
        containerRegistry: 'turtlenetwork docker'
        repository: 'turtlenetwork/mainnet-tngui'
        command: 'push'  
      displayName: 'Push mainnet container'    
